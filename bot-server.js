const express = require('express');
const TelegramBot = require('node-telegram-bot-api');

const app = express();
const PORT = process.env.PORT || 3000;

const BOT_TOKEN = '8316154675:AAGDTSUtW0Ysrg5dEbxn5S5GnAr0cgqwIPc';
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// Serve static files
app.use(express.static('.'));

// Bot commands
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    
    const keyboard = {
        inline_keyboard: [
            [{
                text: 'üß™ –û—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç –ø—Ä–æ—Å—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫',
                web_app: { url: `http://localhost:${PORT}/simple-test.html` }
            }],
            [{
                text: 'üß™ –û—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç —Å–ª–æ–∂–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫',
                web_app: { url: `http://localhost:${PORT}/test-buttons.html` }
            }],
            [{
                text: 'üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É',
                web_app: { url: `http://localhost:${PORT}/index.html` }
            }]
        ]
    };
    
    bot.sendMessage(chatId, 
        '–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å:', 
        { reply_markup: keyboard }
    );
});

bot.onText(/\/test/, (msg) => {
    const chatId = msg.chat.id;
    
    const keyboard = {
        inline_keyboard: [
            [{
                text: 'üß™ –¢–µ—Å—Ç –∫–Ω–æ–ø–æ–∫',
                web_app: { url: `http://localhost:${PORT}/simple-test.html` }
            }]
        ]
    };
    
    bot.sendMessage(chatId, 
        '–û—Ç–∫—Ä—ã–≤–∞—é —Ç–µ—Å—Ç –∫–Ω–æ–ø–æ–∫:', 
        { reply_markup: keyboard }
    );
});

// Handle web app data
bot.on('web_app_data', (msg) => {
    const chatId = msg.chat.id;
    const data = msg.web_app_data.data;
    
    bot.sendMessage(chatId, `–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: ${data}`);
});

// Start server
app.listen(PORT, () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üåê –¢–µ—Å—Ç –∫–Ω–æ–ø–æ–∫: http://localhost:${PORT}/simple-test.html`);
    console.log(`üéÆ –ò–≥—Ä–∞: http://localhost:${PORT}/index.html`);
    console.log(`ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!`);
});

// Error handling
bot.on('error', (error) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});
